# Load Helmer age map
age <- raster("Data/Maps_1951-2000/iitf_jgr113_puertorico_forestage_zone_reprojectedWGS84.tif")
library(raster)
library(rgdal)
library(sp)
library(landscapemetrics)
#load pr outline shapefiel
pr<- readOGR("Data/PR_shapes/outline/PR_outline_Project.shp")
pr <- spTransform(pr, CRS("+proj=lcc +lat_0=17.8333333333333 +lon_0=-66.4333333333333 +lat_1=18.0333333333333 +lat_2=18.4333333333333 +x_0=152400.3048 +y_0=0 +datum=NAD27 +units=m +no_defs"))
# Load Helmer age map
age <- raster("Data/Maps_1951-2000/iitf_jgr113_puertorico_forestage_zone_reprojectedWGS84.tif")
#load forest maps
r51 <- raster("Data/Maps_1951-2000/puerto51_sub1_100905_landcov_final.img")
r77 <- raster("Data/Maps_1951-2000/puerto77_sub1_100905_landcov_urbveg_final.img")
r91 <- raster("Data/Maps_1951-2000/pr91_100805_final_quarry_recode2landcov_subset.img")
r00 <- raster("Data/Maps_1951-2000/pr2000_100805_final_quarry_recode2landcov_subset.img")
#reproject some of r91 and r77 and r00 (with different extent and cordinates) and save them
rp77 <- projectRaster(r77, r51, method='ngb')
#load mod files #mod = enmeval result object
modfiles <- list.files("/Users/laumo791/Documents/PR/C1/Results/2022-12-07_ENMeval_results", full.names = TRUE)
#create empty lists
res <- list() #this is for the results
#select the models with the the lowest omission rate at 10p and the highest AUC
for(i in seq_along(modfiles)){
print(i)
#red in the model files mod
mod <- readRDS(modfiles[i])
# select the models ith the minimum omission rate and the maximum AUC
tmpres <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
#take the full names (file path) and extract the just the code of the species
species <- gsub(".RDA", "", strsplit(modfiles[i],"/")[[1]][9])
tmpres$species <- species
res[[i]] <- tmpres[1,]
#take the predictions maps of the selected models
pred <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
names(pred) <- species
# vector of 1/0 for occ/bg
occ_bg <- c(rep(1, nrow(mod@occs)), rep(0, nrow(mod@bg)))
# vector of predicted values at occ and bg points
pred_vals <- c(raster::extract(pred, mod@occs[,1:2]),
raster::extract(pred, mod@bg[,1:2]))
# find the threshold at max TSS
tss_thresh <- ecospat.max.tss(pred_vals, occ_bg)$max.threshold
# impose the max TSS threshold
pred_thresh <- pred > tss_thresh
names(pred_thresh) <- species
#Save the continuous and thresholded predictions (raster layers)!
raster::writeRaster(pred, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_predictions/", names(pred)), format='GTiff')
raster::writeRaster(pred_thresh, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_threshold/", names(pred_thresh)), format='GTiff')
}
#select the models with the the lowest omission rate at 10p and the highest AUC
for(i in seq_along(modfiles)){
print(i)
#red in the model files mod
mod <- readRDS(modfiles[i])
# select the models ith the minimum omission rate and the maximum AUC
tmpres <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
#take the full names (file path) and extract the just the code of the species
species <- gsub(".RDA", "", strsplit(modfiles[i],"/")[[1]][9])
tmpres$species <- species
res[[i]] <- tmpres[1,]
#take the predictions maps of the selected models
pred <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
names(pred) <- species
# vector of 1/0 for occ/bg
occ_bg <- c(rep(1, nrow(mod@occs)), rep(0, nrow(mod@bg)))
# vector of predicted values at occ and bg points
pred_vals <- c(raster::extract(pred, mod@occs[,1:2]),
raster::extract(pred, mod@bg[,1:2]))
# find the threshold at max TSS
tss_thresh <- ecospat.max.tss(pred_vals, occ_bg)$max.threshold
# impose the max TSS threshold
pred_thresh <- pred > tss_thresh
names(pred_thresh) <- species
#Save the continuous and thresholded predictions (raster layers)!
raster::writeRaster(pred, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_predictions/", names(pred)), format='GTiff')
raster::writeRaster(pred_thresh, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_threshold/", names(pred_thresh)), format='GTiff')
}
for(i in seq_along(modfiles)){
print(i)
#red in the model files mod
mod <- readRDS(modfiles[i])
# select the models ith the minimum omission rate and the maximum AUC
tmpres <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
#take the full names (file path) and extract the just the code of the species
species <- gsub(".RDA", "", strsplit(modfiles[i],"/")[[1]][9])
tmpres$species <- species
res[[i]] <- tmpres[1,]
#take the predictions maps of the selected models
pred <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
names(pred) <- species
# vector of 1/0 for occ/bg
occ_bg <- c(rep(1, nrow(mod@occs)), rep(0, nrow(mod@bg)))
# vector of predicted values at occ and bg points
pred_vals <- c(raster::extract(pred, mod@occs[,1:2]),
raster::extract(pred, mod@bg[,1:2]))
# vector of predicted values at occ and bg points
pred_vals <- c(raster::extract(pred, mod@occs[,1:2]),
raster::extract(pred, mod@bg[,1:2]))
# find the threshold at max TSS
tss_thresh <- ecospat.max.tss(pred_vals, occ_bg)$max.threshold
# impose the max TSS threshold
pred_thresh <- pred > tss_thresh
names(pred_thresh) <- species
#Save the continuous and thresholded predictions (raster layers)!
raster::writeRaster(pred, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_predictions/", names(pred)), format='GTiff')
raster::writeRaster(pred_thresh, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_threshold/", names(pred_thresh)), format='GTiff')
#select the models with the the lowest omission rate at 10p and the highest AUC
for(i in seq_along(modfiles)){
print(i)
#red in the model files mod
mod <- readRDS(modfiles[i])
# select the models ith the minimum omission rate and the maximum AUC
tmpres <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
#take the full names (file path) and extract the just the code of the species
species <- gsub(".RDA", "", strsplit(modfiles[i],"/")[[1]][9])
tmpres$species <- species
res[[i]] <- tmpres[1,]
#take the predictions maps of the selected models
pred <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
names(pred) <- species
# vector of 1/0 for occ/bg
occ_bg <- c(rep(1, nrow(mod@occs)), rep(0, nrow(mod@bg)))
# vector of predicted values at occ and bg points
pred_vals <- c(raster::extract(pred, mod@occs[,1:2]),
raster::extract(pred, mod@bg[,1:2]))
# find the threshold at max TSS
tss_thresh <- ecospat.max.tss(pred_vals, occ_bg)$max.threshold
# impose the max TSS threshold
pred_thresh <- pred > tss_thresh
names(pred_thresh) <- species
#Save the continuous and thresholded predictions (raster layers)!
raster::writeRaster(pred, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_predictions/", names(pred)), format='GTiff')
raster::writeRaster(pred_thresh, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_threshold/", names(pred_thresh)), format='GTiff')
}
#select the models with the the lowest omission rate at 10p and the highest AUC
for(i in seq_along(modfiles)){
print(i)
#red in the model files mod
mod <- readRDS(modfiles[i])
# select the models ith the minimum omission rate and the maximum AUC
tmpres <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
#take the full names (file path) and extract the just the code of the species
species <- gsub(".RDA", "", strsplit(modfiles[i],"/")[[1]][9])
tmpres$species <- species
res[[i]] <- tmpres[1,]
#take the predictions maps of the selected models
pred <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
names(pred) <- species
# vector of 1/0 for occ/bg
occ_bg <- c(rep(1, nrow(mod@occs)), rep(0, nrow(mod@bg)))
# vector of predicted values at occ and bg points
pred_vals <- c(raster::extract(pred, mod@occs[,1:2]),
raster::extract(pred, mod@bg[,1:2]))
# find the threshold at max TSS
tss_thresh <- ecospat.max.tss(pred_vals, occ_bg)$max.threshold
# impose the max TSS threshold
pred_thresh <- pred > tss_thresh
names(pred_thresh) <- species
#Save the continuous and thresholded predictions (raster layers)!
raster::writeRaster(pred, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_predictions/", names(pred)), format='GTiff')
raster::writeRaster(pred_thresh, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_threshold/", names(pred_thresh)), format='GTiff')
}
library(rgdal)
library(raster)
library(ENMeval)
library(dplyr)
library(ecospat)
library(caret)
#select the models with the the lowest omission rate at 10p and the highest AUC
for(i in seq_along(modfiles)){
print(i)
#red in the model files mod
mod <- readRDS(modfiles[i])
# select the models ith the minimum omission rate and the maximum AUC
tmpres <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
#take the full names (file path) and extract the just the code of the species
species <- gsub(".RDA", "", strsplit(modfiles[i],"/")[[1]][9])
tmpres$species <- species
res[[i]] <- tmpres[1,]
#take the predictions maps of the selected models
pred <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
names(pred) <- species
# vector of 1/0 for occ/bg
occ_bg <- c(rep(1, nrow(mod@occs)), rep(0, nrow(mod@bg)))
# vector of predicted values at occ and bg points
pred_vals <- c(raster::extract(pred, mod@occs[,1:2]),
raster::extract(pred, mod@bg[,1:2]))
# find the threshold at max TSS
tss_thresh <- ecospat.max.tss(pred_vals, occ_bg)$max.threshold
# impose the max TSS threshold
pred_thresh <- pred > tss_thresh
names(pred_thresh) <- species
#Save the continuous and thresholded predictions (raster layers)!
raster::writeRaster(pred, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_predictions/", names(pred)), format='GTiff')
raster::writeRaster(pred_thresh, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_threshold/", names(pred_thresh)), format='GTiff')
}
View(mod)
for(i in seq_along(modfiles)){
print(i)
#red in the model files mod
mod <- readRDS(modfiles[i])
# select the models ith the minimum omission rate and the maximum AUC
tmpres <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
#take the full names (file path) and extract the just the code of the species
species <- gsub(".RDA", "", strsplit(modfiles[i],"/")[[1]][9])
tmpres$species <- species
res[[i]] <- tmpres[1,]
#take the predictions maps of the selected models
pred <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
names(pred) <- species
# vector of 1/0 for occ/bg
occ_bg <- c(rep(1, nrow(mod@occs)), rep(0, nrow(mod@bg)))
# vector of predicted values at occ and bg points
pred_vals <- c(raster::extract(pred, mod@occs[,1:2]),
raster::extract(pred, mod@bg[,1:2]))
# find the threshold at max TSS
tss_thresh <- ecospat.max.tss(pred_vals, occ_bg)$max.threshold
# impose the max TSS threshold
pred_thresh <- pred > tss_thresh
names(pred_thresh) <- species
#Save the continuous and thresholded predictions (raster layers)!
raster::writeRaster(pred, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_predictions/", names(pred)), format='GTiff')
raster::writeRaster(pred_thresh, paste0("/Users/laumo791/Documents/PR/C1/Results/SDM_threshold/", names(pred_thresh)), format='GTiff')
}
#load mod files #mod = enmeval result object
modfiles <- list.files("/Users/laumo791/Documents/PR/C1/Results/2022-12-07_ENMeval_results", full.names = TRUE)
#load mod files #mod = enmeval result object
modfiles <- list.files("/Users/laumo791/Documents/PR/C1/Results/2022-12-07_ENMeval_results", full.names = TRUE)
#load mod files #mod = enmeval result object
modfiles <- list.files("/Users/laumo791/Documents/PR/C1/Results/2022-12-07_ENMeval_results", full.names = TRUE)
