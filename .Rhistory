fit_0 <- brm(bf(tpa_2014 ~ 1, quantile = 0.95), data = df, family = asym_laplace())
fit_1 <- brm(bf(tpa_2014 ~ fcover_51.std + tot_change.std + D_51.std, quantile = 0.95),
data = df, family = asym_laplace())
fit_0
predict(fit_0)
df$tpa_2014
plot(df$tpa_2014, predict(fit_0))
plot(df$tpa_2014, predict(fit_0)[,1])
predict(fit_0)[,1]
df$tpa_2014
plot(df$tpa_2014[!is.na(df$tpa_2014)], predict(fit_0)[,1])
m0_2019
predict(m0_2019)
str(m0_2019)
m0_2019$betadraw
m0_2019[[1]]betadraw
m0_2019[[1]]$betadraw
?m0_2019
str(m0_2019)
m0_2019[[1]]$sigmadraw
str(m0_2019)
m0_2019[[1]]$sigma.normal
fit_0
fit_0$fit
fit_0$data2
fit_0$stanvars
fit_0$model
fit_0$threads
str(fit_0)
fit0$fit
fit_0$fit@sim
fit_0$fit@sim$samples
str(fit_0$fit@sim$samples)
plot(fit_0)
fit_1
plot(fit_1)
fit_1
m1
m0
m0 <- bayesQR(tpa_2014 ~ 1, data=df,
quantile= c(0.95), normal.approx=F, ndraw=10000)
m0
m1
fit_0
fit_1
as_draws(fit_0)
as_draws(fit_1)
as_draws(fit_1)[[1]]
as_draws(fit_1)[[1]]$b_D_51.std
lapply(as_draws(fit_1), function(x) x$b_D_51.std)
c(lapply(as_draws(fit_1), function(x) x$b_D_51.std))
do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std))
plot(do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)))
hist(do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)))
plot(fit_1)
hist(do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)))
hist(do.call(c, lapply(as_draws(fit_1), function(x) x$fcover_51.std)))
hist(do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)))
lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)
lapply(as_draws(fit_1), function(x) x$b_fcover_51.std) * df$fcover_51.std
lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)
do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std
df$fcover_51.std
do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[1]
do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[1]
do.call(c, lapply(as_draws(fit_1), function(x) x$b_Intercept))
pred <- do.call(c, lapply(as_draws(fit_1), function(x) x$b_Intercept))
+ do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[1]
+ do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[1]
+ do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)) * df$D_51.std[1]
pred <- do.call(c, lapply(as_draws(fit_1), function(x) x$b_Intercept))
+ do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[1]
+ do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[1]
+ do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)) * df$D_51.std[1]
pred <- do.call(c, lapply(as_draws(fit_1), function(x) x$b_Intercept)) +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[1] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[1] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)) * df$D_51.std[1]
pred
median(pred)
df$tpa_2014
df$tpa_2014[1]
median(pred)
df$tpa_2014[1]
pred <- vector()
for(i in 1:nrow(df)){
pred[i] <- do.call(c, lapply(as_draws(fit_1), function(x) x$b_Intercept)) +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[1] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[1] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)) * df$D_51.std[1]
}
pred
pred <- vector()
for(i in 1:nrow(df)){
pred[i] <- do.call(c, lapply(as_draws(fit_1), function(x) x$b_Intercept)) +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)) * df$D_51.std[i]
}
median(pred)
pred
as_draws(fit_1)
as_draws(fit_1)[[1]]
as_draws(fit_1)[[1]]$b_Intercept
length(as_draws(fit_1)[[1]]$b_Intercept)
pred <- matrix(ncol=nrow(df), nrow=4*length(as_draws(fit_1)[[1]]$b_Intercept))
for(i in 1:nrow(df)){
pred[i,] <- do.call(c, lapply(as_draws(fit_1), function(x) x$b_Intercept)) +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)) * df$D_51.std[i]
}
do.call(c, lapply(as_draws(fit_1), function(x) x$b_Intercept)) +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)) * df$D_51.std[i]
length(do.call(c, lapply(as_draws(fit_1), function(x) x$b_Intercept)) +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)) * df$D_51.std[i])
pred[i,]
pred[,i] <- do.call(c, lapply(as_draws(fit_1), function(x) x$b_Intercept)) +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)) * df$D_51.std[i]
pred <- matrix(ncol=nrow(df), nrow=4*length(as_draws(fit_1)[[1]]$b_Intercept))
for(i in 1:nrow(df)){
pred[,i] <- do.call(c, lapply(as_draws(fit_1), function(x) x$b_Intercept)) +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)) * df$D_51.std[i]
}
pred
apply(pred, 2, median)
plot(df$tpa_2014[1], apply(pred, 2, median))
df$tpa_2014[1]
plot(df$tpa_2014, apply(pred, 2, median))
df$tpa_2014 - apply(pred, 2, median)
pred0 <- matrix(ncol=nrow(df), nrow=4*length(as_draws(fit_1)[[1]]$b_Intercept))
for(i in 1:nrow(df)){
pred0[,i] <- do.call(c, lapply(as_draws(fit_0), function(x) x$b_Intercept))
}
pred0
as_draws(fit_0)
as_draws(fit_0)[[1]]
pred0 <- matrix(ncol=nrow(df), nrow=4*length(as_draws(fit_1)[[1]]$b_Intercept))
for(i in 1:nrow(df)){
pred0[,i] <- do.call(c, lapply(as_draws(fit_0), function(x) x$Intercept))
}
pred0
pred0
plot(df$tpa_2014, apply(pred0, 2, median))
plot(df$tpa_2014, apply(pred1, 2, median))
plot(df$tpa_2014, apply(pred0, 2, median))
plot(df$tpa_2014, apply(pred1, 2, median))
pred1
pred1 <- matrix(ncol=nrow(df), nrow=4*length(as_draws(fit_1)[[1]]$b_Intercept))
for(i in 1:nrow(df)){
pred1[,i] <- do.call(c, lapply(as_draws(fit_1), function(x) x$b_Intercept)) +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)) * df$D_51.std[i]
}
plot(df$tpa_2014, apply(pred0, 2, median))
plot(df$tpa_2014, apply(pred1, 2, median))
resid0 <- df$tpa_2014 - apply(pred0, 2, median)
resid1 <- df$tpa_2014 - apply(pred1, 2, median)
plot(resid0)
plot(resid1)
resid0 <- abs(df$tpa_2014 - apply(pred0, 2, median))
resid1 <- abs(df$tpa_2014 - apply(pred1, 2, median))
plot(resid1)
plot(resid0)
mean(resid1)
mean(resid1, na.rm=T)
mean(resid0, na.rm=T)
rho <- function(u, tau=.5)u*(tau - (u < 0))
V <- sum(rho(resid1, 0.95))
V0 <- sum(rho(resid0, 0.95))
R1 <- 1-V/V0
R1
resid1
V <- sum(rho(resid1[!is.na(resid1)], 0.95))
V0 <- sum(rho(resid0[!is.na(resid0)], 0.95))
V0
V
R1 <- 1-V/V0
R1
pred1 <- matrix(ncol=nrow(df), nrow=4*length(as_draws(fit_1)[[1]]$b_Intercept))
for(i in 1:nrow(df)){
pred1[,i] <- do.call(c, lapply(as_draws(fit_1), function(x) x$Intercept)) +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_fcover_51.std)) * df$fcover_51.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_tot_change.std)) * df$tot_change.std[i] +
do.call(c, lapply(as_draws(fit_1), function(x) x$b_D_51.std)) * df$D_51.std[i]
}
plot(df$tpa_2014, apply(pred0, 2, median))
plot(df$tpa_2014, apply(pred1, 2, median))
resid0 <- abs(df$tpa_2014 - apply(pred0, 2, median))
resid1 <- abs(df$tpa_2014 - apply(pred1, 2, median))
rho <- function(u, tau=.5)u*(tau - (u < 0))
V <- sum(rho(resid1[!is.na(resid1)], 0.95))
V0 <- sum(rho(resid0[!is.na(resid0)], 0.95))
R1 <- 1-V/V0
R1
?rq
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2014 ~ fcover_51.std + tot_change.std, data=df, tau=0.95)
summary(mod1)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2014 ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.95)
summary(mod1)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2014.log ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.95)
summary(mod1)
plot(df$fcover_51.std, df$tpa_2014)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2014 ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.9)
summary(mod1)
?rq
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2014 ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=seq(0.05, 1, by=0.05))
summary(mod1)
abline(mod1)
abline(mod1[[1]])
abline(mod1[1])
plot(df$fcover_51.std, df$tpa_2014)
abline(mod1[1])
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2014 ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.99)
summary(mod1)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2014 ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.95)
summary(mod1)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2014 ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.975)
summary(mod1)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2019 ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.95)
summary(mod1)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2013 ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.95)
summary(mod1)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2009 ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.95)
summary(mod1)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2008 ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.95)
summary(mod1)
df$tpa_2014
df$tpa_2019
cbind(df$tpa_2014, df$tpa_2019)
apply(cbind(df$tpa_2014, df$tpa_2019), 2 mean)
apply(cbind(df$tpa_2014, df$tpa_2019), 2, mean)
apply(cbind(df$tpa_2014, df$tpa_2019), 1, mean)
y <- apply(cbind(df$tpa_2014, df$tpa_2019), 1, mean)
plot(df$fcover_51, y)
df$y <- apply(cbind(df$tpa_2014, df$tpa_2019), 1, mean)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(y ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.95)
summary(mod1)
df$y <- rowSums(cbind(df$tpa_2014, df$tpa_2019))
plot(df$fcover_51, y)
df$y <- rowSums(cbind(df$tpa_2014, df$tpa_2019))
plot(df$fcover_51, y)
plot(df$fcover_51, df$y)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(y ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.95)
summary(mod1)
pp_check(fit_1)
?pp_check
df$tpa_2014
fit_1$prior
?scale
df$tpa_2014.z <- scale(df$tpa_2014, scale=F)
df$tpa_2014.z
plot(df$fcover_51, df$tpa_2014.z)
df$tpa_2014.z
df[na.omit(df),]
df
na.omit(df)
df[!is.na(df$PC1.std),]
fit_0 <- brm(bf(tpa_2014 ~ 1, quantile = 0.95), data = df[!is.na(df$PC1.std),], family = asym_laplace())
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(y ~ fcover_51.std + tot_change.std + D_51.std, data=df[!is.na(df$PC1.std),], tau=0.95)
summary(mod1)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2014 ~ fcover_51.std + tot_change.std + D_51.std, data=df[!is.na(df$PC1.std),], tau=0.95)
summary(mod1)
plot(df$fcover_51, df$tpa_2014)
plot(df$fcover_51[!is.na(df$PC1.std)], df$tpa_2014[!is.na(df$PC1.std)])
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2014 ~ fcover_51.std + tot_change.std + D_51.std, data=df[!is.na(df$PC1.std),], tau=0.95)
summary(mod1)
abline(36, 1.74)
plot(df$fcover_51.std[!is.na(df$PC1.std)], df$tpa_2014[!is.na(df$PC1.std)])
abline(36, 1.74)
plot(df$fcover_51.std, df$tpa_2014)
abline(36, 1.74)
#Run a quantile regression Abundace ~ forest cover 1951
mod1 <- rq(tpa_2014 ~ fcover_51.std + tot_change.std + D_51.std, data=df, tau=0.95)
summary(mod1)
abline(19, 5.82)
plot(df$fcover_51.std, df$tpa_2014)
abline(19, 5.82)
summary(mod1)
mod1.2
summary(mod1.2) #the results are bit different
?Brq
m1
summary(m1)
summary(m2)
summary(m0)
summary(m1)
?bayesQR
m0 <- bayesQR(tpa_2014 ~ ., data=df,
quantile= c(0.95), normal.approx=F, ndraw=10000)
m0
m0 <- bayesQR(tpa_2014 ~ 0, data=df,
quantile= c(0.95), normal.approx=F, ndraw=10000)
# model 2
mod2<- rq(tpa_2014~
fcover_51.std +
tot_change.std +
tot_change.std * PC1.std , data=df_f, tau = 0.95)
df$PC1.std
df$PC1
df_f <- df[!is.na(df$PC1),]
mod2<- rq(tpa_2014~
fcover_51.std +
tot_change.std +
tot_change.std * PC1.std , data=df_f, tau = 0.95)
res.mod2 <- summary(mod2)
res.mod2
nd_l <- data.frame("fcover_51.std"=mean(df_f$fcover_51.std),
"tot_change.std"=seq(-2,3,length.out=155),
"PC1.std"=-2.223796)
nd_h <- data.frame("fcover_51.std"=mean(df_f$fcover_51.std),
"tot_change.std"=seq(-2,3,length.out=155),
"PC1.std"=7.783721)
pred_l <- predict.rq(mod2, newdata = nd_l)
pred_h <- predict.rq(mod2, newdata = nd_h)
data$Colour[data$col_name2>=3]="red"
data$Colour[data$col_name2<=1]="blue"
rbPal <- colorRampPalette(c('red','blue'))
dat$Col <- rbPal(10)[df_f$PC1.std,]
plot(df_f$tot_change.std, df_f$tpa_2014, pch = 16,
main = " Abundace ~ Suitable habitat change ",
xlab = " Suitable habitat change",
ylab = " Species Abundance (TPA)",
col=df_f$PC1.std)
lines(nd_l$tot_change.std, pred_l, col="chartreuse4")
lines(nd_h$tot_change.std, pred_h, col="chocolate1")
legend(-1.6, 82, bg="transparent", legend=c("min PC1", "max PC1"),
col=c("chartreuse4", "chocolate1"), lty = 1, box.lty=0)
mod2_bp <- bayesQR(tpa_2014 ~ fcover_51.std + tot_change.std + PC1.std + tot_change.std * PC1.std , data=df_f,
quantile= c(0.95) ,prior=prior_2 ,ndraw = 100000, keep=5)
#rund second model
prior_2 <- prior(tpa_2014 ~ fcover_51.std + tot_change.std + PC1.std + tot_change.std * PC1.std , data=df_f)
mod2_bp <- bayesQR(tpa_2014 ~ fcover_51.std + tot_change.std + PC1.std + tot_change.std * PC1.std , data=df_f,
quantile= c(0.95) ,prior=prior_2 ,ndraw = 100000, keep=5)
#make a new data frame without NA values
dfx <- data.frame(df_f$tpa_2014,df_f$fcover_51.std, df_f$tot_change.std)
colnames(dfx)[1] <- "tpa_2014"
colnames(dfx)[2] <- "fcover_51.std"
colnames(dfx)[3] <- "tot_change.std"
dfx <- na.omit(dfx)
#rund second model
prior_2 <- prior(tpa_2014 ~ fcover_51.std + tot_change.std + PC1.std + tot_change.std * PC1.std , data=dfx)
#rund second model
prior_2 <- prior(tpa_2014 ~ fcover_51.std + tot_change.std + PC1.std + tot_change.std * PC1.std , data=df_f)
#rund second model
prior_2 <- prior(tpa_2014 ~ fcover_51.std + tot_change.std + PC1.std + tot_change.std * PC1.std , data=df_f)
df_f
#rund second model
prior_2 <- prior(tpa_2014 ~ fcover_51.std + tot_change.std + PC1.std + tot_change.std * PC1.std , data=df_f)
mod2_bp <- bayesQR(tpa_2014 ~ fcover_51.std + tot_change.std + PC1.std + tot_change.std * PC1.std , data=df_f,
quantile= c(0.95), ndraw = 100000, keep=5)
summary(mod2_bp, burnin=10000)
plot(mod2_bp)
plot(mod2_bp, plottype='hist')
y
rm(y)
#import data
df <- read.csv("Data/Derived/master_final.csv")
# Import data
df <- read.csv("Data/Derived/master_final.csv")
# Scale predictors
df$fcover_51.std<- as.vector(scale(df$fcover_51))
df$tot_change.std <- as.vector(scale(df$tot_change))
df$D_51.std <- as.vector(scale(df$D_51))
head(df)
## Load rFIA package
library(rFIA)
getwd()
#Download FIA data for Puerto Rico
PR_Trees <- getFIA(states = 'PR', dir = 'Data/FIA/NEW/PR_TREE.csv')
#load data
PR_Trees <- readFIA("Data/FIA/New") #fix the download bj
PR_Trees
## Load rFIA package
library(rFIA)
#load data
PR_Trees <- readFIA("Data/FIA/NEW") #fix the download bj
head(PR_Trees)
#Only estimates for the most recent inventory year
MR_PR_Trees <- clipFIA(PR_Trees)#mostRecent = TRUE) #subset of the most recent dara (MR)
MR_PR_Trees_tpa <- tpa(MR_PR_Trees)
head(MR_PR_Trees_tpa)
## Load rFIA package
library(rFIA)
#Only estimates for the most recent inventory year
MR_PR_Trees <- clipFIA(PR_Trees)#mostRecent = TRUE) #subset of the most recent dara (MR)
PR_Trees
#Only estimates for the most recent inventory year
MR_PR_Trees <- clipFIA(PR_Trees)#mostRecent = TRUE) #subset of the most recent dara (MR)
#Only estimates for the most recent inventory year
MR_PR_Trees <- clipFIA(PR_Trees, mostRecent = TRUE) #subset of the most recent dara (MR)
MR_PR_Trees_tpa <- tpa(MR_PR_Trees)
?clipFIA
db
#load data
PR_Trees <- readFIA("Data/FIA/Original") #fix the download bj
PR_Trees
#Only estimates for the most recent inventory year
MR_PR_Trees <- clipFIA(PR_Trees)#mostRecent = TRUE) #subset of the most recent dara (MR)
#Only estimates for the most recent inventory year
MR_PR_Trees <- clipFIA(PR_Trees, mostRecent = TRUE) #subset of the most recent dara (MR)
PR_Trees
PR_Trees
class(PR_Trees)
clipFIA(PR_Trees, mostRecent = TRUE)
MR_PR_Trees_tpa <- tpa(PR_Trees)
names(PR_Trees)
#Download FIA data for Puerto Rico
PR_Trees <- getFIA(states = 'PR', dir = 'Data/FIA/bob')
PR_Trees
names(PR_Trees)
#Only estimates for the most recent inventory year
MR_PR_Trees <- clipFIA(PR_Trees, mostRecent = TRUE) #subset of the most recent dara (MR)
MR_PR_Trees_tpa <- tpa(PR_Trees)
head(MR_PR_Trees_tpa)
MR_PR_Trees_tpa <- tpa(MR_PR_Trees)
head(MR_PR_Trees_tpa)
#Only estimates for the most recent inventory year
MR_PR_Trees <- clipFIA(PR_Trees)#, mostRecent = TRUE) #subset of the most recent dara (MR)
MR_PR_Trees
MR_PR_Trees_tpa <- tpa(MR_PR_Trees)
MR_PR_Trees_tpa
#All Inventory Years Available
PR_Trees_tpa<-tpa(PR_Trees)
PR_Trees_tpa
# Group data by species
PR_Trees_sp <- tpa(PR_Trees , bySpecies = TRUE)
PR_Trees_sp_total <- tpa(MR_PR_Trees , bySpecies = TRUE, totals = TRUE, treeDomain = TRUE, areaDomain = TRUE)
PR_Trees_sp_total
#load species list
Sp_list <- read.csv("Data/PR_Trees_species_list.csv")
#load species list
Sp_list <- read.csv("Data/Traits/PR_Trees_species_list.csv")
Sp_list
PR_Trees_sp
F_cover <-read.csv("Data/Derived/Forest_Cover.csv", sep=",")
AI_total <- read.csv("Data/Derived/AI_total.csv", sep=";")
D_total <- read.csv("Data/Derived/D_total.csv")
traits <- read.csv("Data/Derived/Trait_complete.csv")
#format species names
# paste togher species name
Sp_list$SPECIES <- paste(Sp_list$GENUS, Sp_list$SPECIES, sep=" ")
#transform everything to lowercase
Sp_list$SPECIES <- tolower(Sp_list$SPECIES)
#transform first letter of the genus capital
Sp_list$SPECIES <- paste0(toupper(substr(Sp_list$SPECIES, 1, 1)), substr(Sp_list$SPECIES, 2, nchar(Sp_list$SPECIES)))
Sp_list$SP.CODE
FIA$SCIENTIFIC_NAME
PR_Trees_sp_total
FIA <- PR_Trees_sp_total
Sp_list$SPECIES
FIA$SCIENTIFIC_NAME
match(FIA$SCIENTIFIC_NAME, Sp_list$SPECIES)
Sp_list$SP.CODE[match(FIA$SCIENTIFIC_NAME, Sp_list$SPECIES)]
FIA
FIA$TPA
FIA$TPA
FIA$TREE_TOTAL
plot(FIA$TPA, FIA$TREE_TOTAL)
FIA[order(FIA$TPA)]
FIA[order(FIA$TPA),]
head(FIA[rev(order(FIA$TPA)),])
head(FIA$SCIENTIFIC_NAME[rev(order(FIA$TPA))])
(FIA$SCIENTIFIC_NAME[rev(order(FIA$TPA))])
F_cover
#format species names
# paste togher species name
Sp_list$SPECIES <- paste(Sp_list$GENUS, Sp_list$SPECIES, sep=" ")
#transform everything to lowercase
Sp_list$SPECIES <- tolower(Sp_list$SPECIES)
#transform first letter of the genus capital
Sp_list$SPECIES <- paste0(toupper(substr(Sp_list$SPECIES, 1, 1)), substr(Sp_list$SPECIES, 2, nchar(Sp_list$SPECIES)))
FIA$code <- Sp_list$SP.CODE[match(FIA$SCIENTIFIC_NAME, Sp_list$SPECIES)]
#making a data frame only with the species name and the species code
x <- filter(F_cover,F_cover$X %in% FIA$code)
x
x$Species<- FIA$SCIENTIFIC_NAME[match(x$X,FIA$code)]
x <- x[, c(1, 7,2,3,4,5,6)] #this I need to ajugst
#making a data frame only with the species name and the species code
x <- filter(F_cover,F_cover$X %in% FIA$code)
x$X
x
library(dplyr)
library(tidyverse)
library(ggplot2)
FIA
